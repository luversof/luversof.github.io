{"version":3,"sources":["webpack:///./src/views/diablo2/RunewordList.vue","webpack:///./src/views/diablo2/RunewordList.vue?83a5","webpack:///./src/components/diablo2/RunewordList.vue","webpack:///./src/components/diablo2/RunewordList.vue?f29d"],"names":["components","RunewordList","data","methods","__exports__","render","class","runewordList","runeword","key","nameKo","isRunewordDisplay","nameEn","reqLv","itemCategoryList","itemCategory","runeList","length","getItemCategory","rune","id","getRune","completeStats","replace","RuneButton","props","computed","state","diablo2","selectedRuneIdList","runewordSearch","selectedItemCategoryNameList","selectedSocketCountList","searchKeyword","targetRune","i","this","itemCategoryName","targetItemCategory","name","isDisplay","undefined","forEach","selectedRuneId","isTargetRuneInclude","selectedItemCategoryName","selectedItemCategoryNameHierarchyList","push","getItemCategoryNameHierarchyList","selectedItemCategoryHierarchy","socketCount","indexOf","itemCategoryParentName","targetItemCategoryNameHierarchyList","parentName"],"mappings":"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","file":"js/chunk-3b6360b2.8d452100.js","sourcesContent":["<template>\r\n  <div>\r\n    <RunewordList />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport RunewordList from \"@/components/diablo2/RunewordList.vue\";\r\n\r\nexport default {\r\n  components: { RunewordList },\r\n  data() {\r\n    return {};\r\n  },\r\n  methods: {},\r\n};\r\n</script>\r\n\r\n<style></style>\r\n","import { render } from \"./RunewordList.vue?vue&type=template&id=29fcb9fe\"\nimport script from \"./RunewordList.vue?vue&type=script&lang=js\"\nexport * from \"./RunewordList.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\bluesky\\\\git\\\\bluesky-vuejs-study\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n  <table class=\"table table-hover table-sm m-1\">\r\n    <thead>\r\n      <tr>\r\n        <th class=\"col-2\">이름</th>\r\n        <th class=\"col-1\">착용 레벨</th>\r\n        <th class=\"col-2\">대상 아이템</th>\r\n        <th class=\"col-4\">룬 순서</th>\r\n        <th class=\"col-3\">option</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr\r\n        v-for=\"runeword in runewordList\"\r\n        :key=\"runeword.nameKo\"\r\n        :class=\"isRunewordDisplay(runeword) ? '' : 'd-none'\"\r\n      >\r\n        <td>{{ runeword.nameKo }} ({{ runeword.nameEn }})</td>\r\n        <td v-text=\"runeword.reqLv > 0 ? runeword.reqLv : '-'\"></td>\r\n        <td>\r\n          <ul class=\"list-group list-group-flush\">\r\n            <li\r\n              class=\"list-group-item\"\r\n              v-for=\"itemCategory in runeword.itemCategoryList\"\r\n              :key=\"itemCategory\"\r\n            >\r\n              ({{ runeword.runeList.length }})\r\n              {{ getItemCategory(itemCategory).nameKo }}\r\n            </li>\r\n          </ul>\r\n        </td>\r\n        <td>\r\n          <RuneButton\r\n            v-for=\"rune in runeword.runeList\"\r\n            :key=\"rune\"\r\n            :id=\"getRune(rune).id\"\r\n          />\r\n        </td>\r\n        <td\r\n          v-html=\"runeword.completeStats.replace(/(?:\\r\\n|\\r|\\n)/g, '<br />')\"\r\n        ></td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</template>\r\n\r\n<script>\r\nimport { mapState } from \"vuex\";\r\n\r\nimport RuneButton from \"@/components/diablo2/RuneButton.vue\";\r\n\r\nexport default {\r\n  components: { RuneButton },\r\n  props: {},\r\n  data() {\r\n    return {};\r\n  },\r\n  computed: {\r\n    ...mapState({\r\n      runeList: (state) => state.diablo2.rune.runeList,\r\n      runewordList: (state) => state.diablo2.runeword.runewordList,\r\n      itemCategoryList: (state) => state.diablo2.itemCategory.itemCategoryList,\r\n      selectedRuneIdList: (state) =>\r\n        state.diablo2.runewordSearch.selectedRuneIdList,\r\n      selectedItemCategoryNameList: (state) =>\r\n        state.diablo2.runewordSearch.selectedItemCategoryNameList,\r\n      selectedSocketCountList: (state) =>\r\n        state.diablo2.runewordSearch.selectedSocketCountList,\r\n      searchKeyword: (state) => state.diablo2.runewordSearch.searchKeyword,\r\n    }),\r\n  },\r\n  methods: {\r\n    getRune(id) {\r\n      var targetRune = null;\r\n      for (var i = 0; i < this.runeList.length; i++) {\r\n        if (this.runeList[i].id == id) {\r\n          targetRune = this.runeList[i];\r\n          break;\r\n        }\r\n      }\r\n      return targetRune;\r\n    },\r\n    getItemCategory(itemCategoryName) {\r\n      var targetItemCategory = null;\r\n      for (var i = 0; i < this.itemCategoryList.length; i++) {\r\n        if (this.itemCategoryList[i].name == itemCategoryName) {\r\n          targetItemCategory = this.itemCategoryList[i];\r\n          break;\r\n        }\r\n      }\r\n      return targetItemCategory;\r\n    },\r\n    isRunewordDisplay(runeword) {\r\n      // 여기서 보여줄지 말지 결정, 여러 조건에 부합하는 경우를 결정해야함.\r\n      // 1. 선택한 룬\r\n      // 2. 선택한 아이템\r\n      // 3. 검색어\r\n      var isDisplay = true;\r\n\r\n      //선택한 룬에 해당되는 룬워드 검색. and 조건\r\n      if (\r\n        this.selectedRuneIdList !== undefined &&\r\n        this.selectedRuneIdList.length > 0\r\n      ) {\r\n        isDisplay = true;\r\n\r\n        this.selectedRuneIdList.forEach((selectedRuneId) => {\r\n          var isTargetRuneInclude = false;\r\n          runeword.runeList.forEach((rune) => {\r\n            if (selectedRuneId == rune) {\r\n              isTargetRuneInclude = true;\r\n            }\r\n          });\r\n          if (!isTargetRuneInclude) {\r\n            isDisplay = false;\r\n          }\r\n        });\r\n      }\r\n\r\n      // selectedRuneIdList 대상이 아닌 경우 비노출 처리\r\n      if (!isDisplay) {\r\n        return isDisplay;\r\n      }\r\n\r\n      // itemCategory에 해당하는 룬워드 검색. or 조건\r\n      if (\r\n        this.selectedItemCategoryNameList !== undefined &&\r\n        this.selectedItemCategoryNameList.length > 0\r\n      ) {\r\n        isDisplay = false;\r\n        this.selectedItemCategoryNameList.forEach(\r\n          (selectedItemCategoryName) => {\r\n            // 선택한 카테고리의 서브 카테고리까지 검색 대상\r\n            var selectedItemCategoryNameHierarchyList = [];\r\n            selectedItemCategoryNameHierarchyList.push(\r\n              selectedItemCategoryName\r\n            );\r\n            this.getItemCategoryNameHierarchyList(\r\n              selectedItemCategoryName,\r\n              selectedItemCategoryNameHierarchyList\r\n            );\r\n            // 해당하는 카테고리에 해당하는 아이템인지 확인\r\n            selectedItemCategoryNameHierarchyList.forEach(\r\n              (selectedItemCategoryHierarchy) => {\r\n                runeword.itemCategoryList.forEach((itemCategoryName) => {\r\n                  if (selectedItemCategoryHierarchy == itemCategoryName) {\r\n                    isDisplay = true;\r\n                  }\r\n                });\r\n              }\r\n            );\r\n          }\r\n        );\r\n      }\r\n\r\n      // selectedRuneIdList 대상이 아닌 경우 비노출 처리\r\n      if (!isDisplay) {\r\n        return isDisplay;\r\n      }\r\n\r\n      // socketCount 에 해당하는 룬워드 검색. or 조건\r\n      if (\r\n        this.selectedSocketCountList !== undefined &&\r\n        this.selectedSocketCountList.length > 0\r\n      ) {\r\n        isDisplay = false;\r\n        this.selectedSocketCountList.forEach((socketCount) => {\r\n          if (runeword.runeList.length == socketCount) {\r\n            isDisplay = true;\r\n          }\r\n        });\r\n      }\r\n\r\n      // 검색어에 해당하는 runeword인지 확인\r\n      if (this.searchKeyword !== undefined && this.searchKeyword !== \"\") {\r\n        if (\r\n          runeword.nameKo.indexOf(this.searchKeyword) >= 0 ||\r\n          runeword.nameEn.indexOf(this.searchKeyword) >= 0 ||\r\n          runeword.completeStats.indexOf(this.searchKeyword) >= 0\r\n        ) {\r\n          isDisplay = true;\r\n        } else {\r\n          isDisplay = false;\r\n        }\r\n      }\r\n\r\n      return isDisplay;\r\n    },\r\n    getItemCategoryNameHierarchyList(\r\n      itemCategoryParentName,\r\n      targetItemCategoryNameHierarchyList\r\n    ) {\r\n      // 해당 itemCategory의 하위 itemCategory를 찾아야함. 즉 parentItemCategory가 itemCategory인 아이템 모두 찾아서 추가\r\n      this.itemCategoryList.forEach((itemCategory) => {\r\n        if (\r\n          itemCategory.parentName == itemCategoryParentName &&\r\n          targetItemCategoryNameHierarchyList.indexOf(itemCategory.name) < 0\r\n        ) {\r\n          targetItemCategoryNameHierarchyList.push(itemCategory.name);\r\n          this.getItemCategoryNameHierarchyList(\r\n            itemCategory.name,\r\n            targetItemCategoryNameHierarchyList\r\n          );\r\n        }\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style></style>\r\n","import { render } from \"./RunewordList.vue?vue&type=template&id=2c42e9a3\"\nimport script from \"./RunewordList.vue?vue&type=script&lang=js\"\nexport * from \"./RunewordList.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\bluesky\\\\git\\\\bluesky-vuejs-study\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}